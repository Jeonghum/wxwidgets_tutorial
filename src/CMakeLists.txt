cmake_minimum_required (VERSION 3.16)

project(tutorial)

set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "")

if(CMAKE_BUILD_TYPE MATCHES Release)
  message("release mode")
  if(WIN32)
    set(wxWidgets_CONFIGURATION mswu)
    set(CMAKE_CONFIGURATION_TYPES "Release" CACHE STRING "" FORCE)
  endif()
else()
  message("debug mode")
  if(WIN32)
    set(wxWidgets_CONFIGURATION mswud)
    set(CMAKE_CONFIGURATION_TYPES "Debug" CACHE STRING "" FORCE)
  endif()
  if(UNIX)
    add_compile_options(-g -Wall)
  endif()
endif()

find_package(wxWidgets REQUIRED COMPONENTS net core base)
include(${wxWidgets_USE_FILE})
add_executable(tutorial main.cpp)
target_link_libraries(tutorial ${wxWidgets_LIBRARIES})

install(TARGETS tutorial DESTINATION bin)
if(WIN32)
  if(CMAKE_BUILD_TYPE MATCHES Release)
    install(FILES ${wxWidgets_LIB_DIR}/wxbase315u_vc_happynhealthy.dll DESTINATION bin)
    install(FILES ${wxWidgets_LIB_DIR}/wxmsw315u_core_vc_happynhealthy.dll DESTINATION bin)
  else()
    install(FILES ${wxWidgets_LIB_DIR}/wxbase315ud_vc_happynhealthy.dll DESTINATION bin)
    install(FILES ${wxWidgets_LIB_DIR}/wxmsw315ud_core_vc_happynhealthy.dll DESTINATION bin)
  endif()
endif()

include(InstallRequiredSystemLibraries)
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/License.txt")
set(CPACK_PACKAGE_VERSION_MAJOR "0")
set(CPACK_PACKAGE_VERSION_MINOR "1")
if(UNIX)
  set(CPACK_PACKAGE_NAME tutorialpkg)
  set(CPACK_GENERATOR DEB)
  set(CPACK_DEBIAN_PACKAGE_MAINTAINER "happynhealthy")
  set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
endif()
include(CPack)

